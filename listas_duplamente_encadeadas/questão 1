#include <iostream>
using namespace std;


struct Node 
{
    int data;
    Node* prev;
    Node* next;
    
    Node(int value) : data(value), prev(nullptr), next(nullptr) {}
};


class DoublyLinkedList
{
private:
    Node* head;
    Node* tail;

public:
    DoublyLinkedList() : head(nullptr), tail(nullptr) {}

    void inserir(int value)
{
        if (buscar(value))
        {
            cout << "Elemento " << value << " já está na lista." << endl;
            return;
        }

        Node* novoNode = new Node(value);
        if (!head) 
        {
            head = tail = novoNode;
        } else 
        {
            tail->next = novoNode;
            novoNode->prev = tail;
            tail = novoNode;
        }
        cout << "Elemento " << value << " inserido no final da lista." << endl;
    }

    void remover(int value)
{
        Node* current = head;
        while (current) 
        {
            if (current->data == value)
            {
                if (current == head)
                {
                    head = head->next;
                    if (head)
                    {
                        head->prev = nullptr;
                    } else 
                    {
                        tail = nullptr;
                    }
                }
                else 
                {
                    current->prev->next = current->next;
                    if (current->next)
                    {
                        current->next->prev = current->prev;
                    }
                    else 
                    {
                        tail = current->prev;
                    }
                }
                delete current;
                cout << "Elemento " << value << " removido da lista." << endl;
                return;
            }
            current = current->next;
        }
        cout << "Elemento " << value << " não encontrado na lista." << endl;
    }

    bool buscar(int value) {
        Node* current = head;
        while (current) {
            if (current->data == value) {
                cout << "Elemento " << value << " encontrado na lista." << endl;
                return true;
            }
            current = current->next;
        }
        cout << "Elemento " << value << " não encontrado na lista." << endl;
        return false;
    }

    void exibir() {
        Node* current = head;
        if (!current) {
            cout << "Lista vazia." << endl;
            return;
        }
        cout << "Elementos da lista: ";
        while (current) {
            cout << current->data << " ";
            current = current->next;
        }
        cout << endl;
    }
};

int main() {
    DoublyLinkedList lista;

    lista.inserir(1);
    lista.inserir(2);
    lista.inserir(3);
    lista.inserir(2);

    lista.exibir();

    lista.buscar(2);
    lista.buscar(4);

    lista.remover(2);
    lista.remover(3);

    lista.exibir();

    lista.remover(1);
    lista.exibir();

    lista.remover(5);

    return 0;
}

